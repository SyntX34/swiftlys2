// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class C_OP_DecayMaintainCountImpl : CParticleFunctionOperatorImpl, C_OP_DecayMaintainCount {

  public C_OP_DecayMaintainCountImpl(nint handle) : base(handle) {
  }

  public ref int ParticlesToMaintain {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x168E27F3537AE378));
  }
  public ref float DecayDelay {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x168E27F38D6DD836));
  }
  public ref int SnapshotControlPoint {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x168E27F3192638EC));
  }
  public string StrSnapshotSubset {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x168E27F3BD8A8E5E));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x168E27F3BD8A8E5E, value);
  } 
  public ref bool LifespanDecay {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x168E27F39642CC6B));
  }
  public CParticleCollectionFloatInput Scale {
    get => new CParticleCollectionFloatInputImpl(_Handle + Schema.GetOffset(0x168E27F3B731A42F));
  }
  public ref bool KillNewest {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x168E27F3B8EA2EC7));
  }


}