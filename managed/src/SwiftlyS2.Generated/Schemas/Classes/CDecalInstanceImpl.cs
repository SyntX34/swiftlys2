// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CDecalInstanceImpl : SchemaClass, CDecalInstance {

  public CDecalInstanceImpl(nint handle) : base(handle) {
  }

  public ref CGlobalSymbol DecalGroup {
    get => ref _Handle.AsRef<CGlobalSymbol>(Schema.GetOffset(0x88CA447CCEBD4836));
  }
  public ref CStrongHandle<InfoForResourceTypeIMaterial2> Material {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeIMaterial2>>(Schema.GetOffset(0x88CA447C888CE42E));
  }
  public ref CUtlStringToken SequenceName {
    get => ref _Handle.AsRef<CUtlStringToken>(Schema.GetOffset(0x88CA447C7462AF30));
  }
  public ref CHandle<CBaseEntity> Entity {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0x88CA447C6EBADCB0));
  }
  public ref int BoneIndex {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x88CA447C9F407B79));
  }
  public ref int TriangleIndex {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x88CA447C4465462F));
  }
  public ref Vector PositionLS {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x88CA447C9D27001F));
  }
  public ref Vector NormalLS {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x88CA447C1C20D7C7));
  }
  public ref Vector SAxisLS {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x88CA447C95DE878A));
  }
  public ref DecalFlags_t Flags {
    get => ref _Handle.AsRef<DecalFlags_t>(Schema.GetOffset(0x88CA447CCE6E9C28));
  }
  public ref Color Color {
    get => ref _Handle.AsRef<Color>(Schema.GetOffset(0x88CA447CD7D017D8));
  }
  public ref float Width {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CB91935E1));
  }
  public ref float Height {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CEADD7FB0));
  }
  public ref float Depth {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CD3AD54E8));
  }
  public ref float AnimationScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CE03B2F87));
  }
  public GameTime_t PlaceTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0x88CA447C1103AE77));
  }
  public ref float FadeStartTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447C86B28BFA));
  }
  public ref float FadeDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CC4E6DEE1));
  }
  public ref float LightingOriginOffset {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CBB88AF36));
  }
  public ref float BoundingRadiusSqr {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x88CA447CEA90D145));
  }
  public ref short SequenceIndex {
    get => ref _Handle.AsRef<short>(Schema.GetOffset(0x88CA447CF87A9C78));
  }
  public ref bool IsAdjacent {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x88CA447C87EAB10F));
  }
  public ref bool DoDecalLightmapping {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x88CA447C8A2CC817));
  }
  public ref DecalMode_t SkinnedModelMode {
    get => ref _Handle.AsRef<DecalMode_t>(Schema.GetOffset(0x88CA447CFB03C3D7));
  }


}