// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBlend2DUpdateNodeImpl : CAnimUpdateNodeBaseImpl, CBlend2DUpdateNode {

  public CBlend2DUpdateNodeImpl(nint handle) : base(handle) {
  }

  public ref CUtlVector<BlendItem_t> Items {
    get => ref _Handle.AsRef<CUtlVector<BlendItem_t>>(Schema.GetOffset(0xEA40B5A7A87EDAF));
  }
  public ref CUtlVector<TagSpan_t> Tags {
    get => ref _Handle.AsRef<CUtlVector<TagSpan_t>>(Schema.GetOffset(0xEA40B5AB46C8540));
  }
  public CParamSpanUpdater ParamSpans {
    get => new CParamSpanUpdaterImpl(_Handle + Schema.GetOffset(0xEA40B5ADAC91553));
  }
  public ref CUtlVector<int> NodeItemIndices {
    get => ref _Handle.AsRef<CUtlVector<int>>(Schema.GetOffset(0xEA40B5AE050EB13));
  }
  public CAnimInputDamping Damping {
    get => new CAnimInputDampingImpl(_Handle + Schema.GetOffset(0xEA40B5A15440FB5));
  }
  public ref AnimValueSource BlendSourceX {
    get => ref _Handle.AsRef<AnimValueSource>(Schema.GetOffset(0xEA40B5A6AABD08F));
  }
  public CAnimParamHandle ParamX {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xEA40B5A4D0E84BE));
  }
  public ref AnimValueSource BlendSourceY {
    get => ref _Handle.AsRef<AnimValueSource>(Schema.GetOffset(0xEA40B5A69ABCEFC));
  }
  public CAnimParamHandle ParamY {
    get => new CAnimParamHandleImpl(_Handle + Schema.GetOffset(0xEA40B5A4E0E8651));
  }
  public ref Blend2DMode BlendMode {
    get => ref _Handle.AsRef<Blend2DMode>(Schema.GetOffset(0xEA40B5ADBED6224));
  }
  public ref float PlaybackSpeed {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xEA40B5A1AFA7387));
  }
  public ref bool Loop {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xEA40B5AC668A4CB));
  }
  public ref bool LockBlendOnReset {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xEA40B5A76334223));
  }
  public ref bool LockWhenWaning {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xEA40B5AEED48004));
  }
  public ref bool AnimEventsAndTagsOnMostWeightedOnly {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xEA40B5AB97E1262));
  }


}