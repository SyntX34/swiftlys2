// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CDestructiblePart_DamageLevelImpl : SchemaClass, CDestructiblePart_DamageLevel {

  public CDestructiblePart_DamageLevelImpl(nint handle) : base(handle) {
  }

  public string Name {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xF69D69CB63D22D49));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xF69D69CB63D22D49, value);
  } 
  public ref CGlobalSymbol BreakablePieceName {
    get => ref _Handle.AsRef<CGlobalSymbol>(Schema.GetOffset(0xF69D69CB88329BEA));
  }
  public ref int BodyGroupValue {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xF69D69CB90FF4BE9));
  }
  public CSkillInt Health {
    get => new CSkillIntImpl(_Handle + Schema.GetOffset(0xF69D69CB6E9C4CC3));
  }
  public ref float CriticalDamagePercent {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xF69D69CB4488F688));
  }
  public ref EDestructiblePartDamagePassThroughType DamagePassthroughType {
    get => ref _Handle.AsRef<EDestructiblePartDamagePassThroughType>(Schema.GetOffset(0xF69D69CB3D01100A));
  }
  public ref DestructiblePartDestructionDeathBehavior_t DestructionDeathBehavior {
    get => ref _Handle.AsRef<DestructiblePartDestructionDeathBehavior_t>(Schema.GetOffset(0xF69D69CB41778385));
  }
  public ref CGlobalSymbol CustomDeathHandshake {
    get => ref _Handle.AsRef<CGlobalSymbol>(Schema.GetOffset(0xF69D69CBF17A0D42));
  }
  public ref bool ShouldDestroyOnDeath {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xF69D69CBC63DDDD5));
  }
  public CRangeFloat DeathDestroyTime {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0xF69D69CB29D83EA2));
  }


}