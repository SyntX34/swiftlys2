// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CAttributeManagerImpl : SchemaClass, CAttributeManager {

  public CAttributeManagerImpl(nint handle) : base(handle) {
  }

  public ref CUtlVector<CHandle<CBaseEntity>> Providers {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CBaseEntity>>>(Schema.GetOffset(0x7FCB380DA07F345D));
  }
  public ref int ReapplyProvisionParity {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x7FCB380D2F68110B));
  }
  public ref CHandle<CBaseEntity> Outer {
    get => ref _Handle.AsRef<CHandle<CBaseEntity>>(Schema.GetOffset(0x7FCB380D30AE9FA2));
  }
  public ref bool PreventLoopback {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x7FCB380D2CE71CA4));
  }
  public ref attributeprovidertypes_t ProviderType {
    get => ref _Handle.AsRef<attributeprovidertypes_t>(Schema.GetOffset(0x7FCB380DD5677CB4));
  }
  public ref CUtlVector<CAttributeManager__cached_attribute_float_t> CachedResults {
    get => ref _Handle.AsRef<CUtlVector<CAttributeManager__cached_attribute_float_t>>(Schema.GetOffset(0x7FCB380D3CD4B7CB));
  }

  public void ReapplyProvisionParityUpdated() {
    Schema.Update(_Handle, 0x7FCB380D2F68110B);
  }
  public void OuterUpdated() {
    Schema.Update(_Handle, 0x7FCB380D30AE9FA2);
  }
  public void ProviderTypeUpdated() {
    Schema.Update(_Handle, 0x7FCB380DD5677CB4);
  }
}