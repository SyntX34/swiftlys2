// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBaseConstraintImpl : CBoneConstraintBaseImpl, CBaseConstraint {

  public CBaseConstraintImpl(nint handle) : base(handle) {
  }

  public string Name {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xE972C2844D8F5786));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xE972C2844D8F5786, value);
  } 
  public ref Vector UpVector {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0xE972C28487645F1B));
  }
  public ref CUtlLeanVector<IntPtr, int> Slaves {
    get => ref _Handle.AsRef<CUtlLeanVector<IntPtr, int>>(Schema.GetOffset(0xE972C284A62BA9E9));
  }
  public ref CUtlVector Targets {
    get => ref _Handle.AsRef<CUtlVector>(Schema.GetOffset(0xE972C28436A2FF01));
  }


}