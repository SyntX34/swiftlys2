// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBaseCombatCharacterImpl : CBaseFlexImpl, CBaseCombatCharacter {

  public CBaseCombatCharacterImpl(nint handle) : base(handle) {
  }

  public ref bool ForceServerRagdoll {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB47DE3DEC0D0B742));
  }
  public ref CUtlVector<CHandle<CEconWearable>> MyWearables {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CEconWearable>>>(Schema.GetOffset(0xB47DE3DE000B8B43));
  }
  public ref float ImpactEnergyScale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xB47DE3DEC66BAC1B));
  }
  public ref bool ApplyStressDamage {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB47DE3DEC16FF452));
  }
  public ref bool DeathEventsDispatched {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xB47DE3DE8F5C8C9F));
  }
  public ref CUtlVector<RelationshipOverride_t> VecRelationships {
    get => ref _Handle.Deref<CUtlVector<RelationshipOverride_t>>(Schema.GetOffset(0xB47DE3DE2B978F5E));
  }
  public string StrRelationships {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xB47DE3DEF96E2AD7));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xB47DE3DEF96E2AD7, value);
  } 
  public ref Hull_t Hull {
    get => ref _Handle.AsRef<Hull_t>(Schema.GetOffset(0xB47DE3DE20B7E577));
  }
  public ref uint NavHullIdx {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0xB47DE3DE90C08DF0));
  }
  public CMovementStatsProperty MovementStats {
    get => new CMovementStatsPropertyImpl(_Handle + Schema.GetOffset(0xB47DE3DE4CF2CCDB));
  }

  public void MyWearablesUpdated() {
    Schema.Update(_Handle, 0xB47DE3DE000B8B43);
  }
}