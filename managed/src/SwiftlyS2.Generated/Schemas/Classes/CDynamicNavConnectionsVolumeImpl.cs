// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CDynamicNavConnectionsVolumeImpl : CTriggerMultipleImpl, CDynamicNavConnectionsVolume {

  public CDynamicNavConnectionsVolumeImpl(nint handle) : base(handle) {
  }

  public string ConnectionTarget {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0xA03D49DB1120FFE4));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0xA03D49DB1120FFE4, value);
  } 
  public ref CUtlVector<DynamicVolumeDef_t> Connections {
    get => ref _Handle.AsRef<CUtlVector<DynamicVolumeDef_t>>(Schema.GetOffset(0xA03D49DB11986B7E));
  }
  public ref CGlobalSymbol TransitionType {
    get => ref _Handle.AsRef<CGlobalSymbol>(Schema.GetOffset(0xA03D49DB68D65FB9));
  }
  public ref bool ConnectionsEnabled {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xA03D49DB4C10BC9B));
  }
  public ref float TargetAreaSearchRadius {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA03D49DBACD0EEE5));
  }
  public ref float UpdateDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA03D49DB46AB2045));
  }
  public ref float MaxConnectionDistance {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xA03D49DB7590E3B8));
  }


}