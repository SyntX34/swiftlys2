// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class PermModelData_tImpl : SchemaClass, PermModelData_t {

  public PermModelData_tImpl(nint handle) : base(handle) {
  }

  public string Name {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x3E367D0B4D8F5786));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x3E367D0B4D8F5786, value);
  } 
  public PermModelInfo_t ModelInfo {
    get => new PermModelInfo_tImpl(_Handle + Schema.GetOffset(0x3E367D0B506D8FE2));
  }
  public ref CUtlVector<PermModelExtPart_t> ExtParts {
    get => ref _Handle.AsRef<CUtlVector<PermModelExtPart_t>>(Schema.GetOffset(0x3E367D0B8564C2A6));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCRenderMesh>> RefMeshes {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCRenderMesh>>>(Schema.GetOffset(0x3E367D0B9FB3727B));
  }
  public ref CUtlVector<ulong> RefMeshGroupMasks {
    get => ref _Handle.AsRef<CUtlVector<ulong>>(Schema.GetOffset(0x3E367D0BDC56A19B));
  }
  public ref CUtlVector<ulong> RefPhysGroupMasks {
    get => ref _Handle.AsRef<CUtlVector<ulong>>(Schema.GetOffset(0x3E367D0B902CAAFA));
  }
  public ref CUtlVector<byte> RefLODGroupMasks {
    get => ref _Handle.AsRef<CUtlVector<byte>>(Schema.GetOffset(0x3E367D0B0FCE2099));
  }
  public ref CUtlVector<float> LodGroupSwitchDistances {
    get => ref _Handle.AsRef<CUtlVector<float>>(Schema.GetOffset(0x3E367D0B52CCDE75));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCPhysAggregateData>> RefPhysicsData {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCPhysAggregateData>>>(Schema.GetOffset(0x3E367D0BF18951CB));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCPhysAggregateData>> RefPhysicsHitboxData {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCPhysAggregateData>>>(Schema.GetOffset(0x3E367D0B26C451DD));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCAnimationGroup>> RefAnimGroups {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCAnimationGroup>>>(Schema.GetOffset(0x3E367D0BDC24F793));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCSequenceGroupData>> RefSequenceGroups {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCSequenceGroupData>>>(Schema.GetOffset(0x3E367D0B823AD8A3));
  }
  public ref CUtlVector<CUtlString> MeshGroups {
    get => ref _Handle.AsRef<CUtlVector<CUtlString>>(Schema.GetOffset(0x3E367D0B3EF7CCF4));
  }
  public ref CUtlVector<MaterialGroup_t> MaterialGroups {
    get => ref _Handle.AsRef<CUtlVector<MaterialGroup_t>>(Schema.GetOffset(0x3E367D0BDD36CD50));
  }
  public ref ulong DefaultMeshGroupMask {
    get => ref _Handle.AsRef<ulong>(Schema.GetOffset(0x3E367D0B7320202A));
  }
  public ModelSkeletonData_t ModelSkeleton {
    get => new ModelSkeletonData_tImpl(_Handle + Schema.GetOffset(0x3E367D0BAFF3E579));
  }
  public ref CUtlVector<short> RemappingTable {
    get => ref _Handle.AsRef<CUtlVector<short>>(Schema.GetOffset(0x3E367D0B2AA12BB2));
  }
  public ref CUtlVector<ushort> RemappingTableStarts {
    get => ref _Handle.AsRef<CUtlVector<ushort>>(Schema.GetOffset(0x3E367D0BE4304DFB));
  }
  public ref CUtlVector<ModelBoneFlexDriver_t> BoneFlexDrivers {
    get => ref _Handle.AsRef<CUtlVector<ModelBoneFlexDriver_t>>(Schema.GetOffset(0x3E367D0B3670337F));
  }
  public CModelConfigList? ModelConfigList {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x3E367D0B99085156));
      return ptr.IsValidPtr() ? new CModelConfigListImpl(ptr) : null;
    }
  }
  public ref CUtlVector<CUtlString> BodyGroupsHiddenInTools {
    get => ref _Handle.AsRef<CUtlVector<CUtlString>>(Schema.GetOffset(0x3E367D0BE312FA8D));
  }
  public ref CUtlVector<CStrongHandle<InfoForResourceTypeCModel>> RefAnimIncludeModels {
    get => ref _Handle.AsRef<CUtlVector<CStrongHandle<InfoForResourceTypeCModel>>>(Schema.GetOffset(0x3E367D0BD99121D7));
  }
  public ref CUtlVector<PermModelDataAnimatedMaterialAttribute_t> AnimatedMaterialAttributes {
    get => ref _Handle.AsRef<CUtlVector<PermModelDataAnimatedMaterialAttribute_t>>(Schema.GetOffset(0x3E367D0BC29D5124));
  }


}