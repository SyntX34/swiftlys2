// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CNmClipImpl : SchemaClass, CNmClip {

  public CNmClipImpl(nint handle) : base(handle) {
  }

  public ref CStrongHandle<InfoForResourceTypeCNmSkeleton> Skeleton {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeCNmSkeleton>>(Schema.GetOffset(0x3FC883BDE77F030E));
  }
  public ref uint NumFrames {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x3FC883BDF764C355));
  }
  public ref float Duration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x3FC883BDBC5E3BAB));
  }
  public ref CUtlBinaryBlock CompressedPoseData {
    get => ref _Handle.AsRef<CUtlBinaryBlock>(Schema.GetOffset(0x3FC883BDDD916D11));
  }
  public ref CUtlVector<NmCompressionSettings_t> TrackCompressionSettings {
    get => ref _Handle.AsRef<CUtlVector<NmCompressionSettings_t>>(Schema.GetOffset(0x3FC883BD94A50263));
  }
  public ref CUtlVector<uint> CompressedPoseOffsets {
    get => ref _Handle.AsRef<CUtlVector<uint>>(Schema.GetOffset(0x3FC883BD4B1ECAF7));
  }
  public ref CUtlVector<CGlobalSymbol> FloatCurveIDs {
    get => ref _Handle.AsRef<CUtlVector<CGlobalSymbol>>(Schema.GetOffset(0x3FC883BD11EF489E));
  }
  public ref CUtlVector<NmFloatCurveCompressionSettings_t> FloatCurveDefs {
    get => ref _Handle.AsRef<CUtlVector<NmFloatCurveCompressionSettings_t>>(Schema.GetOffset(0x3FC883BDE3CCFA68));
  }
  public ref CUtlVector<ushort> CompressedFloatCurveData {
    get => ref _Handle.AsRef<CUtlVector<ushort>>(Schema.GetOffset(0x3FC883BD42C154B9));
  }
  public ref CUtlVector<uint> CompressedFloatCurveOffsets {
    get => ref _Handle.AsRef<CUtlVector<uint>>(Schema.GetOffset(0x3FC883BD24AF623F));
  }
  public SchemaUntypedField SecondaryAnimations {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x3FC883BD9A6B439E));
  }
  public CNmSyncTrack SyncTrack {
    get => new CNmSyncTrackImpl(_Handle + Schema.GetOffset(0x3FC883BDB268BEE9));
  }
  public CNmRootMotionData RootMotion {
    get => new CNmRootMotionDataImpl(_Handle + Schema.GetOffset(0x3FC883BD664A3F27));
  }
  public ref bool IsAdditive {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x3FC883BD4146EEF5));
  }
  public ref CUtlVector<CNmClip__ModelSpaceSamplingChainLink_t> ModelSpaceSamplingChain {
    get => ref _Handle.AsRef<CUtlVector<CNmClip__ModelSpaceSamplingChainLink_t>>(Schema.GetOffset(0x3FC883BD54666BDA));
  }
  public ref CUtlVector<int> ModelSpaceBoneSamplingIndices {
    get => ref _Handle.AsRef<CUtlVector<int>>(Schema.GetOffset(0x3FC883BD197B4A28));
  }


}