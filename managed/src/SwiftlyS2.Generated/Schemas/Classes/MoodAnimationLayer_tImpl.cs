// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class MoodAnimationLayer_tImpl : SchemaClass, MoodAnimationLayer_t {

  public MoodAnimationLayer_tImpl(nint handle) : base(handle) {
  }

  public string Name {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x3663914263D22D49));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x3663914263D22D49, value);
  } 
  public ref bool ActiveListening {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x36639142122973A0));
  }
  public ref bool ActiveTalking {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x366391423033E5C3));
  }
  public ref CUtlVector<MoodAnimation_t> LayerAnimations {
    get => ref _Handle.AsRef<CUtlVector<MoodAnimation_t>>(Schema.GetOffset(0x3663914250279465));
  }
  public CRangeFloat Intensity {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0x3663914267B5578C));
  }
  public CRangeFloat DurationScale {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0x36639142776D4203));
  }
  public ref bool ScaleWithInts {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0x366391427C46A077));
  }
  public CRangeFloat NextStart {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0x3663914202956BDE));
  }
  public CRangeFloat StartOffset {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0x3663914269A449AA));
  }
  public CRangeFloat EndOffset {
    get => new CRangeFloatImpl(_Handle + Schema.GetOffset(0x36639142C863E027));
  }
  public ref float FadeIn {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x36639142FCA835D2));
  }
  public ref float FadeOut {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x36639142FEBCE80B));
  }


}