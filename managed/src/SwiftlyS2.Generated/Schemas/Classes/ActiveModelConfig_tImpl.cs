// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class ActiveModelConfig_tImpl : SchemaClass, ActiveModelConfig_t {

  public ActiveModelConfig_tImpl(nint handle) : base(handle) {
  }

  public ModelConfigHandle_t Handle {
    get => new ModelConfigHandle_tImpl(_Handle + Schema.GetOffset(0x554D81919D208453));
  }
  public string Name {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x554D8191CAE8A266));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x554D8191CAE8A266, value);
  } 
  public ref CUtlVector<CHandle<CBaseModelEntity>> AssociatedEntities {
    get => ref _Handle.AsRef<CUtlVector<CHandle<CBaseModelEntity>>>(Schema.GetOffset(0x554D8191D6EB4F18));
  }
  public ref CUtlVector<SchemaUntypedField> AssociatedEntityNames {
    get => ref _Handle.AsRef<CUtlVector<SchemaUntypedField>>(Schema.GetOffset(0x554D8191EB3B241C));
  }

  public void HandleUpdated() {
    Schema.Update(_Handle, 0x554D81919D208453);
  }
  public void NameUpdated() {
    Schema.Update(_Handle, 0x554D8191CAE8A266);
  }
  public void AssociatedEntitiesUpdated() {
    Schema.Update(_Handle, 0x554D8191D6EB4F18);
  }
  public void AssociatedEntityNamesUpdated() {
    Schema.Update(_Handle, 0x554D8191EB3B241C);
  }
}