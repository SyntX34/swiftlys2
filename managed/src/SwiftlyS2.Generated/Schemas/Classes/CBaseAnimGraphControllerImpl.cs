// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CBaseAnimGraphControllerImpl : CSkeletonAnimationControllerImpl, CBaseAnimGraphController {

  public CBaseAnimGraphControllerImpl(nint handle) : base(handle) {
  }

  public CAnimGraphNetworkedVariables AnimGraphNetworkedVars {
    get => new CAnimGraphNetworkedVariablesImpl(_Handle + Schema.GetOffset(0xFA1FB81EA83A7C39));
  }
  public ref bool SequenceFinished {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA1FB81E5DB8EB16));
  }
  public ref float SoundSyncTime {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xFA1FB81EE52B5EB4));
  }
  public ref uint ActiveIKChainMask {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0xFA1FB81E070EB774));
  }
  public HSequence Sequence {
    get => new HSequenceImpl(_Handle + Schema.GetOffset(0xFA1FB81EE0A0598E));
  }
  public GameTime_t SeqStartTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xFA1FB81E9120356F));
  }
  public ref float SeqFixedCycle {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0xFA1FB81E77103EAE));
  }
  public ref AnimLoopMode_t AnimLoopMode {
    get => ref _Handle.AsRef<AnimLoopMode_t>(Schema.GetOffset(0xFA1FB81E9C9688D9));
  }
  public ref CNetworkedQuantizedFloat PlaybackRate {
    get => ref _Handle.AsRef<CNetworkedQuantizedFloat>(Schema.GetOffset(0xFA1FB81EC396F9D8));
  }
  public ref SequenceFinishNotifyState_t NotifyState {
    get => ref _Handle.AsRef<SequenceFinishNotifyState_t>(Schema.GetOffset(0xFA1FB81EEEDBFC3D));
  }
  public ref bool NetworkedAnimationInputsChanged {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA1FB81E97092075));
  }
  public ref bool NetworkedSequenceChanged {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA1FB81E9A05208F));
  }
  public ref bool LastUpdateSkipped {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA1FB81E53472D94));
  }
  public GameTime_t PrevAnimUpdateTime {
    get => new GameTime_tImpl(_Handle + Schema.GetOffset(0xFA1FB81E724643D3));
  }
  public ref CStrongHandle<InfoForResourceTypeCNmGraphDefinition> GraphDefinitionAG2 {
    get => ref _Handle.AsRef<CStrongHandle<InfoForResourceTypeCNmGraphDefinition>>(Schema.GetOffset(0xFA1FB81EBE14922A));
  }
  public ref bool IsUsingAG2 {
    get => ref _Handle.AsRef<bool>(Schema.GetOffset(0xFA1FB81EB54DDF17));
  }
  public ref CUtlVector<byte> SerializedPoseRecipeAG2 {
    get => ref _Handle.AsRef<CUtlVector<byte>>(Schema.GetOffset(0xFA1FB81E61B92D46));
  }
  public ref int SerializePoseRecipeSizeAG2 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xFA1FB81E0121F373));
  }
  public ref int SerializePoseRecipeVersionAG2 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xFA1FB81EC099725C));
  }
  public ref byte GraphCreationFlagsAG2 {
    get => ref _Handle.AsRef<byte>(Schema.GetOffset(0xFA1FB81EA3781101));
  }
  public ref int ServerGraphDefReloadCountAG2 {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xFA1FB81E6A8D1A13));
  }
  public ref int ServerSerializationContextIteration {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0xFA1FB81ED9F8A6D4));
  }

  public void AnimGraphNetworkedVarsUpdated() {
    Schema.Update(_Handle, 0xFA1FB81EA83A7C39);
  }
  public void SequenceUpdated() {
    Schema.Update(_Handle, 0xFA1FB81EE0A0598E);
  }
  public void SeqStartTimeUpdated() {
    Schema.Update(_Handle, 0xFA1FB81E9120356F);
  }
  public void SeqFixedCycleUpdated() {
    Schema.Update(_Handle, 0xFA1FB81E77103EAE);
  }
  public void AnimLoopModeUpdated() {
    Schema.Update(_Handle, 0xFA1FB81E9C9688D9);
  }
  public void PlaybackRateUpdated() {
    Schema.Update(_Handle, 0xFA1FB81EC396F9D8);
  }
  public void GraphDefinitionAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81EBE14922A);
  }
  public void IsUsingAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81EB54DDF17);
  }
  public void SerializedPoseRecipeAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81E61B92D46);
  }
  public void SerializePoseRecipeSizeAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81E0121F373);
  }
  public void SerializePoseRecipeVersionAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81EC099725C);
  }
  public void GraphCreationFlagsAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81EA3781101);
  }
  public void ServerGraphDefReloadCountAG2Updated() {
    Schema.Update(_Handle, 0xFA1FB81E6A8D1A13);
  }
  public void ServerSerializationContextIterationUpdated() {
    Schema.Update(_Handle, 0xFA1FB81ED9F8A6D4);
  }
}