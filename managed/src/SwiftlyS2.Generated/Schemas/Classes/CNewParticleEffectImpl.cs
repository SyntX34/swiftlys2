// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Core.Schemas;
using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.SchemaDefinitions;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.Extensions;

namespace SwiftlyS2.Core.SchemaDefinitions;

internal partial class CNewParticleEffectImpl : IParticleEffectImpl, CNewParticleEffect {

  public CNewParticleEffectImpl(nint handle) : base(handle) {
  }

  public CNewParticleEffect? Next {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F2332B11E0E));
      return ptr.IsValidPtr() ? new CNewParticleEffectImpl(ptr) : null;
    }
  }
  public CNewParticleEffect? Prev {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F23D49AD9AA));
      return ptr.IsValidPtr() ? new CNewParticleEffectImpl(ptr) : null;
    }
  }
  public IParticleCollection? Particles {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F230264D666));
      return ptr.IsValidPtr() ? new IParticleCollectionImpl(ptr) : null;
    }
  }
  public string DebugName {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F23831E1E2D));
      return Schema.GetString(ptr);
    }
    set => Schema.SetString(_Handle, 0x80246F23831E1E2D, value);
  } 
  public SchemaUntypedField DontRemove {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F2318B469AA));
  }
  public SchemaUntypedField Remove {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F23DE0A6D5D));
  }
  public SchemaUntypedField NeedsBBoxUpdate {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F235AEEC4C0));
  }
  public SchemaUntypedField IsFirstFrame {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F238B55CEC2));
  }
  public SchemaUntypedField AutoUpdateBBox {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F2326B4EA98));
  }
  public SchemaUntypedField Allocated {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F23BD9EA512));
  }
  public SchemaUntypedField Simulate {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F234268FC4F));
  }
  public SchemaUntypedField ShouldPerformCullCheck {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F235AE4A4A1));
  }
  public SchemaUntypedField ForceNoDraw {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F23B481F091));
  }
  public SchemaUntypedField SuppressScreenSpaceEffect {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F237FA21D5D));
  }
  public SchemaUntypedField ShouldSave {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F23574A1977));
  }
  public SchemaUntypedField ShouldSimulateDuringGamePaused {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F233E7DF411));
  }
  public SchemaUntypedField ShouldCheckFoW {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F237B2493C2));
  }
  public SchemaUntypedField IsAsyncCreate {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F2325222507));
  }
  public SchemaUntypedField FreezeTransitionActive {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F23DE61FB43));
  }
  public SchemaUntypedField FreezeTargetState {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F235ACCAFF4));
  }
  public SchemaUntypedField CanFreeze {
    get => new SchemaUntypedField(_Handle + Schema.GetOffset(0x80246F2314DD4F42));
  }
  public ref Vector SortOrigin {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x80246F23E2F1590F));
  }
  public ref float Scale {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x80246F23B731A42F));
  }
  public PARTICLE_EHANDLE__? Owner {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F23F6D89572));
      return ptr.IsValidPtr() ? new PARTICLE_EHANDLE__Impl(ptr) : null;
    }
  }
  public CParticleProperty? OwningParticleProperty {
    get {
      var ptr = _Handle.Read<nint>(Schema.GetOffset(0x80246F2374DD533C));
      return ptr.IsValidPtr() ? new CParticlePropertyImpl(ptr) : null;
    }
  }
  public ref float FreezeTransitionStart {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x80246F233AB5D201));
  }
  public ref float FreezeTransitionDuration {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x80246F239CE29C67));
  }
  public ref float FreezeTransitionOverride {
    get => ref _Handle.AsRef<float>(Schema.GetOffset(0x80246F23A55719DB));
  }
  public ref Vector LastMin {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x80246F23102539F3));
  }
  public ref Vector LastMax {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x80246F232638E44D));
  }
  public ref uint SplitScreenUser {
    get => ref _Handle.AsRef<uint>(Schema.GetOffset(0x80246F23480103D8));
  }
  public ref Vector AggregationCenter {
    get => ref _Handle.AsRef<Vector>(Schema.GetOffset(0x80246F23094BDF24));
  }
  public ref int RefCount {
    get => ref _Handle.AsRef<int>(Schema.GetOffset(0x80246F237998CBC9));
  }


}