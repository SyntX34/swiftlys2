// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface CBaseDoor : CBaseToggle, ISchemaClass<CBaseDoor> {

  static CBaseDoor ISchemaClass<CBaseDoor>.From(nint handle) => new CBaseDoorImpl(handle);
  static int ISchemaClass<CBaseDoor>.Size => 2664;

  
  public ref QAngle MoveEntitySpace { get; }
  
  public ref Vector MoveDirParentSpace { get; }
  
  public locksound_t Ls { get; }
  
  public ref bool ForceClosed { get; }
  
  public ref bool DoorGroup { get; }
  
  public ref bool Locked { get; }
  
  public ref bool IgnoreDebris { get; }
  
  public ref bool NoNPCs { get; }
  
  public ref FuncDoorSpawnPos_t SpawnPosition { get; }
  
  public ref float BlockDamage { get; }
  
  public string NoiseMoving { get; set; }
  
  public string NoiseArrived { get; set; }
  
  public string NoiseMovingClosed { get; set; }
  
  public string NoiseArrivedClosed { get; set; }
  
  public string ChainTarget { get; set; }
  
  public CEntityIOOutput OnBlockedClosing { get; }
  
  public CEntityIOOutput OnBlockedOpening { get; }
  
  public CEntityIOOutput OnUnblockedClosing { get; }
  
  public CEntityIOOutput OnUnblockedOpening { get; }
  
  public CEntityIOOutput OnFullyClosed { get; }
  
  public CEntityIOOutput OnFullyOpen { get; }
  
  public CEntityIOOutput OnClose { get; }
  
  public CEntityIOOutput OnOpen { get; }
  
  public CEntityIOOutput OnLockedUse { get; }
  
  public ref bool LoopMoveSound { get; }
  
  public ref bool CreateNavObstacle { get; }
  
  public ref bool IsChaining { get; }
  
  public ref bool IsUsable { get; }

  public void IsUsableUpdated();
}