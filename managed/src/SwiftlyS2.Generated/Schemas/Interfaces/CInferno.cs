// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface CInferno : CBaseModelEntity, ISchemaClass<CInferno> {

  static CInferno ISchemaClass<CInferno>.From(nint handle) => new CInfernoImpl(handle);
  static int ISchemaClass<CInferno>.Size => 5216;

  
  public ISchemaFixedArray<Vector> FirePositions { get; }
  
  public ISchemaFixedArray<Vector> FireParentPositions { get; }
  
  public ISchemaFixedArray<bool> FireIsBurning { get; }
  
  public ISchemaFixedArray<Vector> BurnNormal { get; }
  
  public ref int FireCount { get; }
  
  public ref int InfernoType { get; }
  
  public ref int FireEffectTickBegin { get; }
  
  public ref float FireLifetime { get; }
  
  public ref bool InPostEffectTime { get; }
  
  public ref bool WasCreatedInSmoke { get; }
  
  public Extent Extent { get; }
  
  public CountdownTimer DamageTimer { get; }
  
  public CountdownTimer DamageRampTimer { get; }
  
  public ref Vector SplashVelocity { get; }
  
  public ref Vector InitialSplashVelocity { get; }
  
  public ref Vector StartPos { get; }
  
  public ref Vector OriginalSpawnLocation { get; }
  
  public IntervalTimer ActiveTimer { get; }
  
  public ref int FireSpawnOffset { get; }
  
  public ref int MaxFlames { get; }
  
  public ref int SpreadCount { get; }
  
  public CountdownTimer BookkeepingTimer { get; }
  
  public CountdownTimer NextSpreadTimer { get; }
  
  public ref ushort SourceItemDefIndex { get; }

  public void FirePositionsUpdated();
  public void FireParentPositionsUpdated();
  public void FireIsBurningUpdated();
  public void BurnNormalUpdated();
  public void FireCountUpdated();
  public void InfernoTypeUpdated();
  public void FireEffectTickBeginUpdated();
  public void FireLifetimeUpdated();
  public void InPostEffectTimeUpdated();
}