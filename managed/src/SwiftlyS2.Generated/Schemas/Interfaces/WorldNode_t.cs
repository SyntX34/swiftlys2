// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface WorldNode_t : ISchemaClass<WorldNode_t> {

  static WorldNode_t ISchemaClass<WorldNode_t>.From(nint handle) => new WorldNode_tImpl(handle);
  static int ISchemaClass<WorldNode_t>.Size => 352;

  
  // CUtlVector< SceneObject_t >
  public ref CUtlVector SceneObjects { get; }
  
  public ref CUtlVector<ushort> VisClusterMembership { get; }
  
  // CUtlVector< AggregateSceneObject_t >
  public ref CUtlVector AggregateSceneObjects { get; }
  
  // CUtlVector< ClutterSceneObject_t >
  public ref CUtlVector ClutterSceneObjects { get; }
  
  // CUtlVector< ExtraVertexStreamOverride_t >
  public ref CUtlVector ExtraVertexStreamOverrides { get; }
  
  // CUtlVector< MaterialOverride_t >
  public ref CUtlVector MaterialOverrides { get; }
  
  // CUtlVector< WorldNodeOnDiskBufferData_t >
  public ref CUtlVector ExtraVertexStreams { get; }
  
  // CUtlVector< AggregateInstanceStreamOnDiskData_t >
  public ref CUtlVector AggregateInstanceStreams { get; }
  
  // CUtlVector< AggregateVertexAlbedoStreamOnDiskData_t >
  public ref CUtlVector VertexAlbedoStreams { get; }
  
  public ref CUtlVector<CUtlString> LayerNames { get; }
  
  public ref CUtlVector<byte> SceneObjectLayerIndices { get; }
  
  public string GrassFileName { get; set; }
  
  public BakedLightingInfo_t NodeLightingInfo { get; }
  
  public ref bool HasBakedGeometryFlag { get; }


}