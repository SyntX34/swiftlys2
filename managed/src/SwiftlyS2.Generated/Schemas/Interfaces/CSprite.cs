// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface CSprite : CBaseModelEntity, ISchemaClass<CSprite> {

  static CSprite ISchemaClass<CSprite>.From(nint handle) => new CSpriteImpl(handle);
  static int ISchemaClass<CSprite>.Size => 2120;

  
  public ref CStrongHandle<InfoForResourceTypeIMaterial2> SpriteMaterial { get; }
  
  public ref CHandle<CBaseEntity> AttachedToEntity { get; }
  
  public AttachmentHandle_t Attachment { get; }
  
  public ref float SpriteFramerate { get; }
  
  public ref float Frame { get; }
  
  public GameTime_t DieTime { get; }
  
  public ref uint Brightness { get; }
  
  public ref float BrightnessDuration { get; }
  
  public ref float SpriteScale { get; }
  
  public ref float ScaleDuration { get; }
  
  public ref bool WorldSpaceScale { get; }
  
  public ref float GlowProxySize { get; }
  
  public ref float HDRColorScale { get; }
  
  public GameTime_t LastTime { get; }
  
  public ref float MaxFrame { get; }
  
  public ref float StartScale { get; }
  
  public ref float DestScale { get; }
  
  public GameTime_t ScaleTimeStart { get; }
  
  public ref int StartBrightness { get; }
  
  public ref int DestBrightness { get; }
  
  public GameTime_t BrightnessTimeStart { get; }
  
  public ref int SpriteWidth { get; }
  
  public ref int SpriteHeight { get; }

  public void SpriteMaterialUpdated();
  public void AttachedToEntityUpdated();
  public void AttachmentUpdated();
  public void SpriteFramerateUpdated();
  public void FrameUpdated();
  public void BrightnessUpdated();
  public void BrightnessDurationUpdated();
  public void SpriteScaleUpdated();
  public void ScaleDurationUpdated();
  public void WorldSpaceScaleUpdated();
  public void GlowProxySizeUpdated();
  public void HDRColorScaleUpdated();
}