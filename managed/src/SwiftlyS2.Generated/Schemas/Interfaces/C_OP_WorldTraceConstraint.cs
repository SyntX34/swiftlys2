// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface C_OP_WorldTraceConstraint : CParticleFunctionConstraint, ISchemaClass<C_OP_WorldTraceConstraint> {

  static C_OP_WorldTraceConstraint ISchemaClass<C_OP_WorldTraceConstraint>.From(nint handle) => new C_OP_WorldTraceConstraintImpl(handle);
  static int ISchemaClass<C_OP_WorldTraceConstraint>.Size => 2512;

  
  public ref int CP { get; }
  
  public ref Vector CpOffset { get; }
  
  public ref ParticleCollisionMode_t CollisionMode { get; }
  
  public ref ParticleCollisionMode_t CollisionModeMin { get; }
  
  public ref ParticleTraceSet_t TraceSet { get; }
  
  public string CollisionGroupName { get; set; }
  
  public ref bool WorldOnly { get; }
  
  public ref bool BrushOnly { get; }
  
  public ref bool IncludeWater { get; }
  
  public ref int IgnoreCP { get; }
  
  public ref float CpMovementTolerance { get; }
  
  public ref float RetestRate { get; }
  
  public ref float TraceTolerance { get; }
  
  public ref float CollisionConfirmationSpeed { get; }
  
  public ref float MaxTracesPerFrame { get; }
  
  public CPerParticleFloatInput RadiusScale { get; }
  
  public CPerParticleFloatInput BounceAmount { get; }
  
  public CPerParticleFloatInput SlideAmount { get; }
  
  public CPerParticleFloatInput RandomDirScale { get; }
  
  public ref bool DecayBounce { get; }
  
  public ref bool KillonContact { get; }
  
  public ref float MinSpeed { get; }
  
  public ref bool SetNormal { get; }
  
  public ParticleAttributeIndex_t StickOnCollisionField { get; }
  
  public CPerParticleFloatInput StopSpeed { get; }
  
  public ParticleAttributeIndex_t EntityStickDataField { get; }
  
  public ParticleAttributeIndex_t EntityStickNormalField { get; }


}