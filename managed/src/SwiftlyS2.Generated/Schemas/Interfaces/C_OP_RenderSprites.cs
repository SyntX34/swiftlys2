// <auto-generated />
#pragma warning disable CS0108
#nullable enable

using SwiftlyS2.Shared.Schemas;
using SwiftlyS2.Shared.Natives;
using SwiftlyS2.Core.SchemaDefinitions;

namespace SwiftlyS2.Shared.SchemaDefinitions;

public partial interface C_OP_RenderSprites : CBaseRendererSource2, ISchemaClass<C_OP_RenderSprites> {

  static C_OP_RenderSprites ISchemaClass<C_OP_RenderSprites>.From(nint handle) => new C_OP_RenderSpritesImpl(handle);
  static int ISchemaClass<C_OP_RenderSprites>.Size => 21056;

  
  public CParticleCollectionRendererFloatInput SequenceOverride { get; }
  
  public ref bool SequenceNumbersAreRawSequenceIndices { get; }
  
  public ref ParticleOrientationChoiceList_t OrientationType { get; }
  
  public ref int OrientationControlPoint { get; }
  
  public ref bool UseYawWithNormalAligned { get; }
  
  public CParticleCollectionRendererFloatInput MinSize { get; }
  
  public CParticleCollectionRendererFloatInput MaxSize { get; }
  
  public CParticleCollectionRendererFloatInput AlphaAdjustWithSizeAdjust { get; }
  
  public CParticleCollectionRendererFloatInput StartFadeSize { get; }
  
  public CParticleCollectionRendererFloatInput EndFadeSize { get; }
  
  public ref float StartFadeDot { get; }
  
  public ref float EndFadeDot { get; }
  
  public ref bool DistanceAlpha { get; }
  
  public ref bool SoftEdges { get; }
  
  public ref float EdgeSoftnessStart { get; }
  
  public ref float EdgeSoftnessEnd { get; }
  
  public ref bool Outline { get; }
  
  public ref Color OutlineColor { get; }
  
  public ref int OutlineAlpha { get; }
  
  public ref float OutlineStart0 { get; }
  
  public ref float OutlineStart1 { get; }
  
  public ref float OutlineEnd0 { get; }
  
  public ref float OutlineEnd1 { get; }
  
  public ref ParticleLightingQuality_t LightingMode { get; }
  
  public CParticleCollectionRendererVecInput LightingOverride { get; }
  
  public CParticleCollectionRendererFloatInput LightingTessellation { get; }
  
  public CParticleCollectionRendererFloatInput LightingDirectionality { get; }
  
  public ref bool ParticleShadows { get; }
  
  public ref float ShadowDensity { get; }
  
  public CReplicationParameters ReplicationParameters { get; }


}