{
    "CEntityInstance::AcceptInput": {
        "lib": "server",
        "windows": "48 89 5C 24 ? 48 89 74 24 ? 57 48 83 EC ? 49 8B F0 48 8B D9 48 8B 0D",
        "linux": "55 48 89 F0 48 89 E5 41 57 49 89 FF 41 56 48 8D 7D"
    },
    "CEntityIdentity::AcceptInput": {
        "lib": "server",
        "windows": "48 89 5C 24 ? 48 89 54 24 ? 48 89 4C 24 ? 55 56 57 41 54 41 55 41 56 41 57 48 8D AC 24 ? ? ? ? 48 81 EC ? ? ? ? 48 8B 02",
        "linux": "55 49 89 D3 48 89 E5 41 57 45 89 CF 41 56"
    },
    "CCSPlayerController::SwitchTeam": {
        "lib": "server",
        "windows": "40 53 57 48 81 EC ? ? ? ? 48 8B D9 8B FA",
        "linux": "55 48 89 E5 41 54 49 89 FC 89 F7"
    },
    "UTIL::CreateEntityByName": {
        "lib": "server",
        "windows": "48 83 EC 48 C6 44 24 30 00",
        "linux": "48 8D 05 ? ? ? ? 55 48 89 FA"
    },
    "CBaseModelEntity::SetModel": {
        "lib": "server",
        "windows": "40 53 48 83 EC ? 48 8B D9 4C 8B C2 48 8B 0D ? ? ? ? 48 8D 54 24 ? 48 8B 01 FF 50 ? 48 8B 44 24",
        "linux": "55 48 89 F2 48 89 E5 53 48 89 FB 48 8D 7D ? 48 83 EC ? 48 8D 05 ? ? ? ? 48 8B 30 48 8B 06"
    },
    "CBaseEntity::DispatchSpawn": {
        "lib": "server",
        "windows": "48 89 5C 24 10 57 48 83 EC 30 48 8B DA 48 8B F9 48 85 C9",
        "linux": "48 85 FF 74 ? 55 48 89 E5 41 55 49 89 FD"
    },
    "UTIL::Remove": {
        "lib": "server",
        "windows": "48 85 C9 74 ? 48 8B D1 48 8B 0D ? ? ? ?",
        "linux": "48 89 FE 48 85 FF 74 ? 48 8D 05 ? ? ? ? 48"
    },
    "LegacyGameEventListener": {
        "lib": "server",
        "windows": "48 8B 15 ? ? ? ? 48 85 D2 74 ? 83 F9 ? 77 ? 48 63 C1 48 C1 E0",
        "linux": "48 8B 05 ? ? ? ? 48 85 C0 74 ? 83 FF ? 77 ? 48 63 FF 48 C1 E7 ? 48 8D 44 38"
    },
    "CAttributeList::SetOrAddAttributeValueByName": {
        "lib": "server",
        "windows": "40 53 55 41 56 48 81 EC 90 00 00 00",
        "linux": "55 48 89 E5 41 57 41 56 49 89 FE 41 55 41 54 49 89 F4 53 48 83 EC 78"
    },
    "CBaseModelEntity::SetBodygroup": {
        "lib": "server",
        "windows": "48 89 5C 24 08 48 89 74 24 10 57 48 83 EC 20 41 8B F8 48 8B F2 48 8B D9 E8 ? ? ? ?",
        "linux": "55 48 89 E5 41 55 49 89 F5 41 54 41 89 D4 53 48 89 FB 48 83 EC ? E8 ? ? ? ? 48 85 C0"
    },
    "GiveNamedItem": {
        "lib": "server",
        "windows": "48 89 5C 24 ? 48 89 74 24 ? 55 57 41 55 41 56 41 57 48 8D 6C 24 ? 48 81 EC ? ? ? ? 4D 8B F9",
        "linux": "55 48 89 E5 41 57 41 56 41 55 41 54 53 48 81 EC D8 00 00 00 48 89 8D 18 FF FF FF"
    },
    "CTakeDamageInfo::Constructor": {
        "lib": "server",
        "windows": "40 53 48 83 EC 60 48 C7 41 38 FF FF FF FF",
        "linux": "49 BB ? ? ? ? ? ? ? ? 55 66 0F EF C9 48 89 E5"
    },
    "CEntityIOOutput::FireOutputInternal": {
        "lib": "server",
        "windows": "4C 89 4C 24 ? 48 89 4C 24 ? 53 56",
        "linux": "55 48 89 E5 41 57 49 89 FF 41 56 41 55 41 54 49 89 D4 53 48 89 F3"
    },
    "CBasePlayerController::SetPawn": {
        "lib": "server",
        "windows": "44 88 4C 24 ? 53 57 41 54 41 56 41 57 48 83 EC",
        "linux": "55 48 8D 87 ? ? ? ? 48 89 E5 41 57 41 56 41 89 CE 41 55 45 89 CD"
    },
    "CCSPlayerPawnBase::PostThink": {
        "lib": "server",
        "windows": "48 ? ? 55 53 56 57 41 ? 48 ? ? ? 48 ? ? ? ? ? ? 4C 89 68",
        "linux": "55 48 89 E5 41 56 41 55 41 54 53 48 89 FB 48 83 EC 40 E8 ? ? ? ? F3 0F 10 83"
    },
    "CGameRules::TerminateRound": {
        "lib": "server",
        "windows": "48 8B C4 4C 89 48 ? 48 89 48 ? 55 56",
        "linux": "55 48 89 E5 41 57 41 56 49 89 FE 41 55 41 54 53 48 81 EC ? ? ? ? 48 8D 05 ? ? ? ? F3 0F 11 85"
    },
    "CBaseEntity::TakeDamage": {
        "lib": "server",
        "windows": "4C 8B DC 56 57 48 81 EC ? ? ? ? 48 8B 41",
        "linux": "55 48 89 E5 41 57 41 56 41 55 41 54 53 48 89 FB 48 81 EC ? ? ? ? 4C 8D 25 ? ? ? ? 49 8B 3C 24"
    },
    // "Error - cannot add bots after game is over."
    "BotNavIgnore1": {
        "lib": "server",
        "windows": "0F 84 ? ? ? ? 80 B8 ? ? ? ? 00 0F 84 ? ? ? ? 80 3D ? ? ? ? 00 74 15",
        "linux": "0F 84 ? ? ? ? 44 0F B6 B0 ? ? ? ? 45 84 F6 0F 84"
    },
    // "Error - cannot add bots after game is over."
    "BotNavIgnore2": {
        "lib": "server",
        "windows": "0F 84 ? ? ? ? 80 B8 ? ? ? ? 00 0F 84 ? ? ? ? 80 3D ? ? ? ? 00 74 15",
        "linux": "0F 84 ? ? ? ? 44 0F B6 B0 ? ? ? ? 45 84 F6 0F 84"
    },
    // "Error - cannot add bots after game is over."
    "BotNavIgnore3": {
        "lib": "server",
        "windows": "0F 84 ? ? ? ? 80 B8 ? ? ? ? 00 0F 84 ? ? ? ? 80 3D ? ? ? ? 00 74 15",
        "linux": "0F 84 ? ? ? ? 44 0F B6 B0 ? ? ? ? 45 84 F6 0F 84"
    },
    // Search "Game System %s is defined twice!\n" and get the sig to the first qword referenced
    "IGameSystem::InitAllSystems->pFirst": {
        "lib": "server",
        "windows": "48 8B 1D ? ? ? ? 48 85 DB 0F 84 ? ? ? ? BD",
        "linux": "4C 8B 35 ? ? ? ? 4D 85 F6 75 ? E9"
    },
    // Windows: "%s:  IGameSystem::LoopPostInitAllSystems(start)\n"
    // Linux: "%s:  IGameSystem::LoopInitAllSystems(start)"
    "IGameSystem::LoopPostInitAllSystems->pEventDispatcher": {
        "lib": "server",
        "windows": "48 39 1D ? ? ? ? 74 ? 39 05",
        "linux": "4C 8B 25 ? ? ? ? 48 8B 05 ? ? ? ? 8B 35"
    },
    // Search for string "--CLoopModeGame::SetWorldSession". In the function with the string,
    // a number is checked if it's positive, and then the function is called
    "IGameSystem::LoopDestroyAllSystems->s_GameSystems": {
        "lib": "server",
        "windows": "8B 05 ? ? ? ? 83 E8 ? 48 63 F8 0F 88",
        "linux": "8B 05 ? ? ? ? 89 C2 83 EA ? 0F 88 ? ? ? ? 4C 8D 3D"
    },
    // Find string "%sRecv usercmd %d.  Margin:%5.1fms net +%2d queue =%5.1f total\n"
    "CCSPlayerController::ProcessUserCmd": {
        "lib": "server",
        "windows": "48 8B C4 44 88 48 20 44 89 40 18 48 89 50 10 53",
        "linux": "55 48 89 E5 41 57 41 56 41 55 41 54 53 48 89 FB 48 83 EC ? 89 4D"
    },
    // There's a reference with "SetPosition" as argument
    "CEntitySystem::AddEntityIOEvent": {
        "lib": "server",
        "windows": "48 89 5C 24 18 4C 89 4C 24 20 48 89 4C 24 08 55 56 57 41 54 41 55 41 56 41 57 48 83 EC 20",
        "linux": "55 48 89 E5 41 55 49 89 CD 41 54 49 89 FC"
    },
    // Function with 5 arguments next to sv_walkable_normal references
    "TracePlayerBBox": {
        "lib": "server",
        "windows": "4C 89 44 24 18 55 53 56 57 41 55 41 56 48 8D AC 24 F8 FE FF FF",
        "linux": "55 48 89 E5 41 57 41 56 49 89 D6 41 55 49 89 FD 41 54 53 48 89 F3 48 81 EC D8 01 00 00"
    },
    // Find string 'Physics/TraceShape (Server)'
    "TraceShape": {
        "lib": "server",
        "windows": "48 89 5C 24 20 48 89 4C 24 08 55 57",
        "linux": "55 48 89 E5 41 57 49 89 CF 41 56 49 89 F6 41 55 4D 89 C5"
    },
    // Find string '[AI BT]: '%s' is unable to purchase item '%s'. Moving on to the next bot.',
    // the string is in an if block, and the if statement contains the call to this function
    "CCSPlayer_ItemServices::CanAcquire": {
        "lib": "server",
        "windows": "44 89 44 24 ? 48 89 54 24 ? 48 89 4C 24 ? 55 53 56 57 41 55 41 56 41 57 48 8B EC",
        "linux": "55 48 89 E5 41 57 41 56 41 55 49 89 CD 41 54 49 89 FC 53 48 89 F3 48 83 EC 78"
    },
    // Find string 'Client %d(%s) tried to send a RebroadcastSourceId msg.' which is in
    // a logging call. On linux search for the one which is being used in CServerSideClient.
    "INetworkMessageProcessingPreFilter::FilterMessage": {
        "lib": "engine2",
        "windows": "40 53 48 83 EC ? 48 8B 02 48 8B D9 48 8B CA",
        "linux": "55 48 89 E5 53 48 89 FB 48 89 F7 48 83 EC ? 48 8B 06 FF 50 ? 48 89 C2 31 C0 48 39 15 ? ? ? ? 74 ? 48 8B 5D ? C9 C3 0F 1F 80 ? ? ? ? 8B 3D ? ? ? ? BE ? ? ? ? E8 ? ? ? ? 84 C0 74 ? 48 8B 43 ? 4C 8D 05 ? ? ? ? BE ? ? ? ? 0F B7 4B"
    }
}